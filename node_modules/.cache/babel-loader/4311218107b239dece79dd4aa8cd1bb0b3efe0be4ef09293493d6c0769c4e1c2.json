{"ast":null,"code":"var _jsxFileName = \"C:\\\\portfolio\\\\presentation\\\\src\\\\routes.jsx\";\nimport React from 'react';\nimport { createBrowserRouter, RouterProvider } from 'react-router-dom';\nimport { PresentationPage } from './pages/PresentationPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst routes = createBrowserRouter([{\n  path: '/',\n  Component: PresentationPage\n}, {\n  path: \"/linkedin\",\n  Component: () => {\n    window.open(\"https://www.linkedin.com/in/bianca-sakaniwa/\", '_blank', 'noopener noreferrer');\n    return null;\n  }\n}, {\n  path: \"github\",\n  Component: () => {\n    window.open(\"https://github.com/bisakaniwa\", \"_blank\", \"noreferrer\");\n    return null;\n  }\n}]);\nexport const PresentationRoutes = () => {\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: routes\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 7\n  }, this);\n};\n_c = PresentationRoutes;\nvar _c;\n$RefreshReg$(_c, \"PresentationRoutes\");","map":{"version":3,"names":["React","createBrowserRouter","RouterProvider","PresentationPage","jsxDEV","_jsxDEV","routes","path","Component","window","open","PresentationRoutes","router","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/portfolio/presentation/src/routes.jsx"],"sourcesContent":["import React from 'react';\r\nimport { createBrowserRouter, RouterProvider } from 'react-router-dom';\r\nimport { PresentationPage } from './pages/PresentationPage';\r\n\r\nconst routes = createBrowserRouter([\r\n   { path: '/', Component: PresentationPage },\r\n   {\r\n      path: \"/linkedin\", Component: () => {\r\n         window.open(\"https://www.linkedin.com/in/bianca-sakaniwa/\", '_blank', 'noopener noreferrer'); return null;\r\n      }\r\n   },\r\n   {\r\n      path: \"github\", Component: () => {\r\n         window.open(\"https://github.com/bisakaniwa\", \"_blank\", \"noreferrer\"); return null;\r\n      }\r\n   }\r\n]);\r\n\r\nexport const PresentationRoutes = () => {\r\n   return (\r\n      <RouterProvider router={routes} />\r\n   );\r\n};"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,mBAAmB,EAAEC,cAAc,QAAQ,kBAAkB;AACtE,SAASC,gBAAgB,QAAQ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,MAAMC,MAAM,GAAGL,mBAAmB,CAAC,CAChC;EAAEM,IAAI,EAAE,GAAG;EAAEC,SAAS,EAAEL;AAAiB,CAAC,EAC1C;EACGI,IAAI,EAAE,WAAW;EAAEC,SAAS,EAAEA,CAAA,KAAM;IACjCC,MAAM,CAACC,IAAI,CAAC,8CAA8C,EAAE,QAAQ,EAAE,qBAAqB,CAAC;IAAE,OAAO,IAAI;EAC5G;AACH,CAAC,EACD;EACGH,IAAI,EAAE,QAAQ;EAAEC,SAAS,EAAEA,CAAA,KAAM;IAC9BC,MAAM,CAACC,IAAI,CAAC,+BAA+B,EAAE,QAAQ,EAAE,YAAY,CAAC;IAAE,OAAO,IAAI;EACpF;AACH,CAAC,CACH,CAAC;AAEF,OAAO,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EACrC,oBACGN,OAAA,CAACH,cAAc;IAACU,MAAM,EAAEN;EAAO;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAExC,CAAC;AAACC,EAAA,GAJWN,kBAAkB;AAAA,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}